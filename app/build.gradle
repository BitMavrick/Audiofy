plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.prime.player"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0.0-alpha01"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            zipAlignEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // TODO - current only for debug version
            // needs to be removed
            // android team also released the latest technique for testing app with out
            // debug data; needs to study it further
            // signingConfig signingConfigs.debug
            //debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        freeCompilerArgs = [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xcontext-receivers",
          /*      "-Xuse-k2",
                "-Xjdk-release=1.8"*/
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //Android KTX is a set of Kotlin extensions that are included with Android Jetpack and other Android libraries.
    implementation 'androidx.core:core-ktx:1.8.0'
    // Allows access to new APIs on older API versions of the platform
    implementation 'androidx.appcompat:appcompat:1.4.2'

    implementation 'com.google.android.material:material:1.6.1'
    //Fundamental components of compose UI needed to interact with the device, including layout,
    // drawing, and input.
    implementation "androidx.compose.ui:ui:$compose_version"
    // Material Design
    // Build Jetpack Compose UIs with ready to use Material Design Components. This is the higher
    // level entry point of Compose, designed to provide components that match those described
    // at www.material.io.
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation-graphics:$compose_version"
    //implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Lifecycles only (without ViewModel or LiveData)
    // Lifecycle-aware components perform actions in response to a change in the lifecycle status of
    // another component, such as activities and fragments. These components help you produce
    // better-organized, and often lighter-weight code, that is easier to maintain.
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'


    def room_version = "2.4.2"

    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    //prefs
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // The Accompanist Libraries
    def accompanist_version = '0.23.1'
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    //implementation "com.google.accompanist:accompanist-coil:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation('io.coil-kt:coil-compose:1.3.2')
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-placeholder:$accompanist_version"


    //Unity Ads
    implementation 'com.unity3d.ads:unity-ads:3.7.5'

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    //constraint layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha02'
    //ticker view
    implementation 'com.robinhood.ticker:ticker:2.0.2'
    //lottie
    //def lottieVersion = "1.0.0-beta03-1"
    //implementation "com.airbnb.android:lottie-compose:$lottieVersion"
    def lottieVersion = '4.1.0'
    implementation "com.airbnb.android:lottie:$lottieVersion"
    // retrofit
    //implementation 'pl.droidsonroids:jspoon:1.3.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Tooling support (Previews, etc.)
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    //required by playback service
    implementation 'androidx.media:media:1.6.0'
    //implementation 'androidx.core:core-ktx:1.6.0'
    //palette to extract image colors
    implementation "androidx.palette:palette-ktx:1.0.0"

    //audio visualizer
    implementation 'com.gauravk.audiovisualizer:audiovisualizer:0.9.2'

    //Ken Burns
    implementation 'com.flaviofaria:kenburnsview:1.0.7'

    //h_text_view
    def htextview_version = "0.1.6"
    implementation "com.hanks:htextview-base:$htextview_version"        // base library
    implementation "com.hanks:htextview-rainbow:$htextview_version"     // optional


    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:28.4.0')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}